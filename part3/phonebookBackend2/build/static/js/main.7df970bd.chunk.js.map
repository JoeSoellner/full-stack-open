{"version":3,"sources":["components/Contact.js","components/ContactDisplay.js","components/ContactForm.js","components/ErrorNotification.js","services/contacts.js","components/App.js","index.js"],"names":["Contact","name","number","id","ContactDisplay","contacts","deleteButtonClickHandler","map","contact","onClick","ContactForm","props","onSubmit","submitHandler","value","newName","onChange","changeNameHandler","newNumber","changeNumberHandler","type","ErrorNotification","message","baseUrl","contactService","getAll","console","log","axios","get","then","response","data","create","newObject","post","add","remove","delete","update","put","App","useState","setContacts","setNewName","setNewNumber","errorMessage","setErrorMessage","useEffect","responseData","event","preventDefault","i","length","checkIfNameInContacts","window","confirm","contactToBeUpdated","getContactsWithName","catch","error","newContact","concat","setTimeout","target","contactsID","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7df970bd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Contact = ({ name, number, id }) => {\r\n    return (\r\n        <li key={id}>\r\n            {name}: {number}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Contact from './Contact';\r\n\r\nconst ContactDisplay = ({ contacts, deleteButtonClickHandler }) => {\r\n\r\n    return (\r\n        <ul>\r\n            {contacts.map((contact) =>\r\n                <div key={contact.id}>\r\n                    <Contact key={contact.id} name={contact.name} number={contact.number} />\r\n                    <button onClick={() => deleteButtonClickHandler(contact.id)}>delete</button>\r\n                </div>)\r\n            }\r\n        </ul >\r\n    )\r\n}\r\n\r\nexport default ContactDisplay;","import React from 'react';\r\n\r\nconst ContactForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.submitHandler}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.changeNameHandler} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.changeNumberHandler} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n    if (message == null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorNotification;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    console.log(\"you: 123450897659485637\")\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst add = (newObject) => {\r\n    const request = axios.post(`${baseUrl}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst contactService = {\r\n    getAll, create, add, remove, update\r\n};\r\nexport default contactService;","import React, { useState, useEffect } from 'react';\r\nimport ContactDisplay from './ContactDisplay';\r\nimport ContactForm from './ContactForm';\r\nimport ErrorNotification from './ErrorNotification';\r\nimport contactService from '../services/contacts';\r\n\r\nconst App = () => {\r\n    const [contacts, setContacts] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const hook = () => {\r\n        console.log(\"hello?\")\r\n        contactService\r\n            .getAll()\r\n            .then(responseData => {\r\n                setContacts(responseData)\r\n            })\r\n    }\r\n    useEffect(hook, []);\r\n\r\n    const checkIfNameInContacts = (name) => {\r\n        for (let i = 0; i < contacts.length; i++) {\r\n            if (name === contacts[i].name) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const getContactsWithName = (name) => {\r\n        for (let i = 0; i < contacts.length; i++) {\r\n            if (name === contacts[i].name) {\r\n                return contacts[i];\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n\r\n    const addContacts = (event) => {\r\n        event.preventDefault();\r\n        if (checkIfNameInContacts(newName)) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\r\n                const contactToBeUpdated = getContactsWithName(newName);\r\n\r\n                contactService\r\n                    .update(contactToBeUpdated.id, { ...contactToBeUpdated, number: newNumber })\r\n                    .then(responseData => {\r\n                        setContacts(\r\n                            contacts.map(contact => contact.id !== contactToBeUpdated.id ? contact : responseData));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('fail', error);\r\n                    });\r\n            }\r\n        } else {\r\n            const newContact = { name: newName, number: newNumber };\r\n\r\n            contactService\r\n                .add(newContact)\r\n                .then(responseData => {\r\n                    setContacts(contacts.concat(responseData));\r\n                    setNewName('');\r\n                    setNewNumber('');\r\n\r\n                    setErrorMessage(\r\n                        `contact '${newContact.name}' was added`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    console.log('fail', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleInputChangeName = (event) => {\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const handleInputChangeNumber = (event) => {\r\n        setNewNumber(event.target.value);\r\n    }\r\n\r\n    const deleteButtonClickHandler = (id) => {\r\n        const contactsID = id;\r\n        contactService.remove(contactsID);\r\n        setContacts(contacts.filter((contact) => contact.id !== contactsID))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <ErrorNotification message={errorMessage} />\r\n            <ContactForm\r\n                submitHandler={addContacts} newName={newName} newNumber={newNumber}\r\n                changeNameHandler={handleInputChangeName} changeNumberHandler={handleInputChangeNumber} />\r\n            <h2>Numbers</h2>\r\n            <ContactDisplay contacts={contacts} setContacts={setContacts}\r\n                deleteButtonClickHandler={deleteButtonClickHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}